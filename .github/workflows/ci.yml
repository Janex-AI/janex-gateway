name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  GO_VERSION: '1.23.x'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      TEST_DATABASE_URL: postgres://postgres:postgres@localhost:5432/testdb?sslmode=disable
      DB_HOST: localhost
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: testdb
      DB_SSL_MODE: disable

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Verify dependencies
      run: go mod verify

    - name: Install golang-migrate
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/latest/download/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate /usr/local/bin/
        which migrate

    - name: Run database migrations
      run: migrate -path apps/backend/migrations -database $TEST_DATABASE_URL up

    - name: Run tests
      run: go test -race ./...

  build:
    runs-on: ubuntu-latest
    needs: [test]
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        mkdir -p dist
        BINARY_NAME=mcp-gateway
        if [ "$GOOS" = "windows" ]; then
          BINARY_NAME="${BINARY_NAME}.exe"
        fi
        go build -ldflags="-w -s" -o dist/${BINARY_NAME}-${GOOS}-${GOARCH} ./apps/backend/cmd/api

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mcp-gateway-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dist/
